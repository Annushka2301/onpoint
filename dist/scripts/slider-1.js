let swipeStartTime,swipeEndTime,slider=document.querySelector(".slider"),sliderList=slider.querySelector(".slider__list"),sliderTrack=slider.querySelector(".slider__track"),slides=slider.querySelectorAll(".slider__slide"),home=document.querySelector(".header__btn"),next=slider.querySelector(".slide-1__btn"),slideWidth=slides[0].offsetWidth,slideIndex=0,posInit=0,posX1=0,posX2=0,posY1=0,posY2=0,posFinal=0,isSwipe=!1,isScroll=!1,allowSwipe=!0,transition=!0,nextTrf=0,prevTrf=0,lastTrf=--slides.length*slideWidth,posThreshold=.35*slides[0].offsetWidth,trfRegExp=/([-0-9.]+(?=px))/,animation=document.querySelectorAll(".slide-2__img");modal=document.querySelector(".modal"),getEvent=function(){return-1!==event.type.search("touch")?event.touches[0]:event},slide=function(){if(transition&&(sliderTrack.style.transition="transform .5s"),sliderTrack.style.transform=`translate3d(-${slideIndex*slideWidth}px, 0px, 0px)`,1===slideIndex)for(let e=0;e<animation.length;e++)animation[e].classList.add("appear");else for(let e=0;e<animation.length;e++)animation[e].classList.remove("appear");2!==slideIndex&&(modal.style="display: none")},swipeStart=function(){let e=getEvent();allowSwipe&&(swipeStartTime=Date.now(),transition=!0,nextTrf=(slideIndex+1)*-slideWidth,prevTrf=(slideIndex-1)*-slideWidth,posInit=posX1=e.clientX,posY1=e.clientY,sliderTrack.style.transition="",document.addEventListener("touchmove",swipeAction),document.addEventListener("mousemove",swipeAction),document.addEventListener("touchend",swipeEnd),document.addEventListener("mouseup",swipeEnd),sliderList.classList.remove("grab"),sliderList.classList.add("grabbing"))},swipeAction=function(){let e=getEvent(),s=+sliderTrack.style.transform.match(trfRegExp)[0];if(posX2=posX1-e.clientX,posX1=e.clientX,posY2=posY1-e.clientY,posY1=e.clientY,!isSwipe&&!isScroll){let e=Math.abs(posY2);e>7||0===posX2?(isScroll=!0,allowSwipe=!1):e<7&&(isSwipe=!0)}if(isSwipe){if(0===slideIndex){if(posInit<posX1)return void setTransform(s,0);allowSwipe=!0}if(slideIndex===--slides.length){if(posInit>posX1)return void setTransform(s,lastTrf);allowSwipe=!0}if(posInit>posX1&&s<nextTrf||posInit<posX1&&s>prevTrf)return void reachEdge();sliderTrack.style.transform=`translate3d(${s-posX2}px, 0px, 0px)`}},swipeEnd=function(){posFinal=posInit-posX1,isScroll=!1,isSwipe=!1,document.removeEventListener("touchmove",swipeAction),document.removeEventListener("mousemove",swipeAction),document.removeEventListener("touchend",swipeEnd),document.removeEventListener("mouseup",swipeEnd),sliderList.classList.add("grab"),sliderList.classList.remove("grabbing"),allowSwipe?(swipeEndTime=Date.now(),(Math.abs(posFinal)>posThreshold||swipeEndTime-swipeStartTime<300)&&(posInit<posX1?slideIndex--:posInit>posX1&&slideIndex++),posInit!==posX1?(allowSwipe=!1,slide()):allowSwipe=!0):allowSwipe=!0},setTransform=function(e,s){e>=s&&e>s&&(sliderTrack.style.transform=`translate3d(${s}px, 0px, 0px)`),allowSwipe=!1},reachEdge=function(){transition=!1,swipeEnd(),allowSwipe=!0},sliderTrack.style.transform="translate3d(0px, 0px, 0px)",sliderList.classList.add("grab"),sliderTrack.addEventListener("transitionend",(()=>allowSwipe=!0)),slider.addEventListener("touchstart",swipeStart),slider.addEventListener("mousedown",swipeStart),home.addEventListener("click",(function(){slideIndex=0,slide()})),next.addEventListener("click",(function(){slideIndex=1,slide()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
